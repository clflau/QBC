a <- 2 + 3
a
b <- a + a
a + a; a + b
a <- 2 + 3
source('~/.active-rstudio-document')
a <- 2 + 3
a <- 2 + 3
a
b <- a + a
a + a; a + b
a <- 2 + 3
a
b <- a + a
a + a; a + b
#hello
##hello
a <- 2 + 3
a
b <- a + a
a + a; a + b
# B.2 Assignment
a <- 2 + 3
a
b <- a + a
a + a; a + b
save(a)
a
help("save")
# B.3
##B.3.1
y <- c(8.3, 8.6, 10.7, 10.8, 11, 11, 11.1, 11.2, 11.3, 11.4)
1:4
4:1
-1:3
-(1:3)
seq(from = 1, to =3, by = 0.2)
seq(1, 3, by = 0.2)
seq(1, 3, length = 7)
rep(1, 3)
rep(1:3, 2)
rep(1:3, each = 2)
sum(Y)
sum(y)
mean(y)
max(y)
length(y)
summary(y)
names <- c(:Sarah", "Yunluan")")
names <- c(:Sarah", "Yunluan")
names <- c("Sarah", "Yunluan")
names
b <- c(TRUE, FALSE)
b
class(y)
class(b)
y > 10
y > mean(y)
y == 11
y != 11
a <- 1:3
b <- 4:6
a + b
a * b
a / b
a + 1
a * 2
1 / a
a * 1:2
a * c(1, 2, 1)
1:4 * 1:2
1:4 * c(1,2,1,2)
# B.3.3
y[1]
y[1:3]
y > mean(y)
y[y > mean(y)]
a <- c(5, 3, 6, NA)
a
is.na(a)
!is.na(a)
a[!is.na(a)]
na.exclude(a)
help("na.exclude")
na.pass(a)
print(a)
print(a,na.rm)
na.action(a)
print(a, na.rm = TRUE)
print(a, na.rm = FALSE)
mean(a)
mean(a, na.rm = TRUE)
c <- c(a,1)
c
na.exclude(c)
d <- c(5, NA, 2, 5, 6)
na.exclude(d)
help("na.action")
class(d)
class("NA")
class(NA)
class(exclude)
mean(a)
mean(a, na.rm = TRUE)
d <- na.exclude(a)
mean(d)
#B.3.4
matrix(letters[1:4], ncol = 2)
M <- matrix(1:4, nrow = 2)
M
M2 <- matrix(1:4, nrow = 2, byrow = TRUE)
M2
I <- diag(1, nrow = 2)
I
Minv <- solve(M)
M %*% Minv
qr.solve()
qr.solve(M)
M
M[1, 2]
M[1, 1:2]
M[, 2)]
M[, 2]
M[, ]
# skip simple matrix algebra
# B.3.5
dat <- data.frame(species = c("S.altissima", "S.rugosa", "E.graminifolia", "A.pilosus"), treatment = factor(c("Control", "Water", "Control", "Water")), height = c(1.1, 0.8, 0.9, 1), width = c(1, 1.7, 0.6, 0.2))
dat
dat[2, ]
dat[3, 4]
dat[, 2] == "Water"
dat[dat[, 2] == "Water"]
dat[dat[, 2] == "Water",]
subset(dat, treatment == "Water")
c("Control", "Medium", "High")
rep(c("Control", "Medium", "High"), each = 3)
Treatment <- factor(rep(c("Control", "Medium", "High"), each = 3))
Treatment
levels(Treatment)
stripchart(1:9 ~ Treatment)
Treatment <- factor(rep(c("Control", "Medium", "High"), each = 3), levels = c("Control", "Medium", "High"))
levels(Treatment)
stripchart(1:9 ~ Treatment)
library(ape)
library(geiger)
library(ggplot2)
install.packages("geiger")
library(geiger)
library(geiger)
updateR()
